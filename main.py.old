import pygame
import sys
import math
import os
import time

image = pygame.image.load(sys.argv[1])

display = pygame.display.set_mode((image.get_rect().width, image.get_rect().height))

backgroundColors = ["0xffffff", "0x201c1c"]

centerBiasScale = 0.7

def recolorSurface(surface, color):
    for y in range(surface.get_rect().height):
        for x in range(surface.get_rect().width):
            if surface.get_at((x, y)).a > 0:
                surface.set_at((x, y), color)

def makeSpeechBubble(lockCenter, x, y, imageWidth, thickness, color):
    if lockCenter == False:
        ellipseY = 0
        if (y > image.get_rect().height / 2):
            ellipseY = image.get_rect().height
    outerHeight = thickness
    outerWidth = image.get_rect().width
    if lockCenter == False:
        centerPoint = [(x - image.get_rect().width / 2) * centerBiasScale + image.get_rect().width / 2, ellipseY]
    deltaToCursor = math.atan2(centerPoint[1] - y, centerPoint[0] - x)
    p1 = [math.cos(deltaToCursor - (math.pi/2)) * (thickness / 4), math.sin(deltaToCursor - (math.pi / 2)) * (thickness / 4)]
    p2 = [math.cos(deltaToCursor + (math.pi/2)) * (thickness / 4), math.sin(deltaToCursor + (math.pi / 2)) * (thickness / 4)]
    p1[0] += centerPoint[0]
    p1[1] += centerPoint[1]
    p2[0] += centerPoint[0]
    p2[1] += centerPoint[1]
    surface1 = pygame.Surface((outerWidth, int(max(outerHeight, y))), pygame.SRCALPHA)
    pygame.draw.ellipse(surface1, "black", (0, 0, outerWidth, outerHeight))
    pygame.draw.polygon(surface1, "black", [(x, y), p1, p2])
    surface2 = pygame.transform.scale(surface1, (0.9, 0.9))
    recolorSurface(surface2, (255, 255, 255, 255))
    surface1.blit(surface2, (0, 0))
    offsetToCenter = 0
    return surface1, ellipseY, offsetToCenter

def main():
    colorSelection = 0
    x = image.get_rect().width / 2
    y = image.get_rect().height / 2

    thickness = 40

    centerPoint = (0, 0)

    lockCenter = False
    while True:
        capture = False
        display.blit(image, (0, 0))
        for event in pygame.event.get():
            if event.type == pygame.MOUSEMOTION:
                x = event.pos[0]
                y = event.pos[1]
            elif event.type == pygame.MOUSEWHEEL:
                thickness += event.y
            elif event.type == pygame.MOUSEBUTTONDOWN and event.button in (1, 3):
                capture = True
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_UP:
                    colorSelection = (colorSelection + 1) % 2
                elif event.key == pygame.K_DOWN:
                    colorSelection = (colorSelection - 1) % 2
                elif event.key == pygame.K_LSHIFT:
                    lockCenter = True
            elif event.type == pygame.KEYUP:
                if event.key == pygame.K_LSHIFT:
                    lockCenter = False
            elif event.type == pygame.QUIT:
                exit(0)
        speechBubble, _, _ = makeSpeechBubble(lockCenter, x, y, image.get_rect().width, thickness, backgroundColors[colorSelection])
        display.blit(speechBubble, (0, 0))
        pygame.display.flip()
        if (capture):
            pygame.image.save(display, "SPEECHBUBBLE".join(os.path.splitext(sys.argv[1])))
            exit(0)

if __name__ == '__main__':
    main()
